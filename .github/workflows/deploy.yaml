name: Build and Push Docker image

on:
# Build from input box
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
      push:
        description: 'Push to ECR'
        required: true
        type: boolean
        default: true

env:
  VERSION: ${{ github.event.inputs.version }}
  PUSH: ${{ github.event.inputs.push }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Use Caching for npm
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
        
      - name: Cache npm cache
        uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
              
      - name: Install npm dependencies and build UI
        run: |
          cd ui
          npm install
          npm run build
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
  
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        env:
          VERSION: ${{ env.VERSION }}
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ env.PUSH == 'true' }}
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/gerev:${{ github.sha }}
            ${{ steps.login-ecr.outputs.registry }}/gerev:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max